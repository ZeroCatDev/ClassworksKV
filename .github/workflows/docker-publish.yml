name: Docker Build and Push

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  MYSQL_IMAGE_NAME: ZeroCatDev/Classworks-mysql
  POSTGRES_IMAGE_NAME: ZeroCatDev/Classworks-postgres
  SQLITE_IMAGE_NAME: ZeroCatDev/Classworks-sqlite

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.MYSQL_IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ env.POSTGRES_IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ env.SQLITE_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=long
            type=raw,value=latest,enable={{is_default_branch}}

      # Build and push MySQL image
      - name: Build and push MySQL image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            DATABASE_TYPE=mysql
          tags: |
            ${{ env.REGISTRY }}/${{ env.MYSQL_IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.MYSQL_IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}

      # Build and push PostgreSQL image
      - name: Build and push PostgreSQL image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            DATABASE_TYPE=postgres
          tags: |
            ${{ env.REGISTRY }}/${{ env.POSTGRES_IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.POSTGRES_IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}

      # Build and push SQLite image
      - name: Build and push SQLite image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            DATABASE_TYPE=sqlite
          tags: |
            ${{ env.REGISTRY }}/${{ env.SQLITE_IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.SQLITE_IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}